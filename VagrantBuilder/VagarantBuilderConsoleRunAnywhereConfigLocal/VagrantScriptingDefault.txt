config.vm.provision "Separate After", after: :each, type: "shell", inline:<<-SHELL
  echo '=============================='
  get-date
  SHELL
  config.vm.provision "Separate Before", before: :each, type: "shell", inline:<<-SHELL
  echo '++++++++++++++++++++++++++++++'
  get-date
  SHELL
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
   config.vm.provision "shell", inline: <<-SHELL
ECHO "Enabling IIS"
DISM /online /Enable-Feature /FeatureName:"NetFx4Extended-ASPNET45"
DISM /online /Enable-Feature /FeatureName:IIS-ASPNET45 /All
DISM /online /Enable-Feature /FeatureName:"IIS-HttpCompressionDynamic"
SHELL

config.vm.provision "shell", inline: <<-SHELL
ECHO "Downloading Archive"

mkdir c:\\install
(New-Object Net.WebClient).DownloadFile("https://github.com/decisions-com/DecisionsVagrantBuilder/blob/master/VagrantBuilder/VagrantBuilderConsoleRunAnywhere/Content/Archive.zip?raw=true" , "C:\\install\\Archive.zip")
Expand-Archive -LiteralPath C:\\install\\archive.Zip -DestinationPath C:\\install\\Archive
ECHO "Downloading SQL - takes 7-10 mins"
(New-Object Net.WebClient).DownloadFile("https://download.microsoft.com/download/E/F/2/EF23C21D-7860-4F05-88CE-39AA114B014B/SQLEXPR_x64_ENU.exe?WT.mc_id=-blog-scottha" , "C:\\install\\sql2017express.exe")

SHELL

config.vm.provision "shell", inline: <<-SHELL
ECHO "Extracting SQL"
mkdir C:\\SQLUpdates
mkdir c:\\mssql

(New-Object Net.WebClient).DownloadFile("https://raw.githubusercontent.com/decisions-com/DecisionsVagrantBuilder/master/VagrantBuilder/defaultsql" , "C:\\install\\ConfigurationFile.ini")
$msbuild = "C:\\install\\sql2017express.exe"
$arguments = "/x:c:\\install\\sql /q"
start-process $msbuild $arguments -wait -NoNewWindow
SHELL

config.vm.provision "shell", inline: <<-SHELL
ECHO "Installing SQL"

$msbuild = "C:\\install\\sql\\SETUP.EXE"
$arguments = "/ConfigurationFile=C:\\install\\ConfigurationFile.ini"
start-process $msbuild $arguments -wait 
ECHO "Finished SQL"
SHELL

config.vm.provision "shell", inline: <<-SHELL
ECHO "Installing Decisions"
(New-Object Net.WebClient).DownloadFile("https://raw.githubusercontent.com/decisions-com/DecisionsVagrantBuilder/master/VagrantBuilder/decdefault" , "C:\\install\\Archive\\DecisionsInstaller\\InstallerSetup.xml")


$msbuild = "C:\\install\\Archive\\DecisionsInstaller\\DecisionsInstaller.exe"
$arguments = "C:\\install\\Archive\\DecisionsInstaller\\InstallerSetup.xml"
start-process $msbuild $arguments -wait 
SHELL


config.vm.provision "shell", inline: <<-SHELL

ECHO "Finished Decisions Installation"
ECHO "IP ADDRESS is "
Set-ItemProperty -Path "HKLM:\\SOFTWARE\\Microsoft\\Internet Explorer\\Main" -Name "DisableFirstRunCustomize" -Value 2
ECHO (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
SHELL
